StreamBuilder<QuerySnapshot>(
          stream: _stocklistfireref
              .doc(userid)
              .collection('cart-collection')
              .snapshots(),
          builder: (context, AsyncSnapshot<QuerySnapshot> _streamSnapshot) {
            var itemCount = _streamSnapshot.data?.docs.length;

            if (_streamSnapshot.connectionState == ConnectionState.waiting) {
              return const Center(
                child: CircularProgressIndicator(),
              );
            }

            if (_streamSnapshot.hasData) {
              return 


              _stockistfireref
                                                  .doc(data.id)
                                                  .update({
                                                'id': _id,
                                                'date': date,
                                                'name': _name,
                                                'vendor': _vendor,
                                                'quantity': _quantity,
                                                'purchaseprize': _purchaseprize,
                                                'sellingprize': _sellingprize,
                                                'discound': _discount
                                              }).then((value) => ScaffoldMessenger
                                                          .of(context)
                                                      .showSnackBar(const SnackBar(
                                                          content: Text(
                                                              "updated  the textfields"))));
                                              Navigator.of(context).pop();
                                            } else {
                                              Fluttertoast.showToast(
                                                  msg:
                                                      'fill all the text fields',
                                                  gravity: ToastGravity.BOTTOM);
                                            }